name: pipeline

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  ci:
    strategy:
      matrix:
        args: ["build", "lint"]
        os: [ubuntu-latest]
        go-version: [1.20.5]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Cache Golang Deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: Run ${{ matrix.args }}
        run: make ${{ matrix.args }}
        env:
          GOPATH: /home/runner/go
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage-${{ matrix.args }}.txt
          retention-days: 1
        if: ${{ matrix.args == 'testunitcover' || matrix.args == 'testintegrationcover' }}

  codecov:
    name: codecov(uploader, ubuntu-latest)
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download code coverage results
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
